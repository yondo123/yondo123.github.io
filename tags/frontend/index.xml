<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>frontend on Jiny</title>
    <link>https://jinyisland.kr/tags/frontend/</link>
    <description>Recent content in frontend on Jiny</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Sep 2022 16:39:39 +0900</lastBuildDate><atom:link href="https://jinyisland.kr/tags/frontend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Sass] Sass 설치 및 기본 문법 소개</title>
      <link>https://jinyisland.kr/content/style/what-sass/</link>
      <pubDate>Sun, 25 Sep 2022 16:39:39 +0900</pubDate>
      
      <guid>https://jinyisland.kr/content/style/what-sass/</guid>
      <description>Sass를 사용해야 할 이유 CSS만 주구장창 사용하다가 한달동안 Sass를 스터디하였는데 직접 사용해보니 왜 Sass를 사용하면 좋은지 정리를 해보았다.
1. 규모가 크고 복잡한 웹 어플리케이션에서의 효율적인 구조화
Sass에서 제공하는 여러 내장 함수 및 믹스인, 함수를 사용해 공통 스타일 작성에 더욱 효율적이다.
2. 프로그래밍 언어 처럼 변수, 조건문, 반복문 활용을 통해 중복되지 않은 공통 컴포넌트 작성
CSS에서도 중복되는 값들은 root요소에 변수를 선언해서 사용하였지만, Sass 환경에서는 코드 블록 범위 내에서 자유로운 변수 선언이 가능하며 조건문, 반복문을 지원해 반복적인 코드 사용이 줄어들고 논리적으로 스타일 구조를 작성할 수 있다.</description>
    </item>
    
    <item>
      <title>[React] 리액트 라우터 기본 사용방법</title>
      <link>https://jinyisland.kr/post/react-router/</link>
      <pubDate>Wed, 22 Jun 2022 23:23:52 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/react-router/</guid>
      <description>페이지 라우팅 vue를 처음 접했을 때 이해했던 개념이지만, 한번 더 정리하자면 일단 라우터라는 개념은 네트워크 상에서 통신 데이터를 보낼 경로를 선택하는 과정을 의미한다. SPA 환경의 웹 애플리케이션(Vue, React, Angular)에서는 말 그대로 요청(Request)에 따라 알맞은 페이지를 반환해주는 과정 자체로 이해하면 된다.
SPA의 단일 페이지라는 이점을 살려, MPA(Multi Page Application) 환경과는 달리 페이지자체를 반환하지 않고 데이터만 불러와 렌더링해주기 때문에 사용자 입장에서 훨씬 빠르다고 느낄 수 있다. 또한 클라이언트에서 렌더링을 다루기때문에 CSR(Client Side Rendering)이라고도 불린다.</description>
    </item>
    
    <item>
      <title>HTML에 폰트 적용하는 방법</title>
      <link>https://jinyisland.kr/post/font/</link>
      <pubDate>Mon, 17 Jan 2022 23:18:33 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/font/</guid>
      <description>웹 폰트 웹 폰트를 적용하는 방법은 크게 2가지가 있다. 하나는 cdn을 이용하는 방법, 나머지 하나는 직접 폰트 파일을 경로에 미리 삽입하여 @font-face로 정의하는 방법이다.
CDN을 활용한 방법 구글 폰트 등과 같이 cdn을 제공해주는 사이트에서 폰트를 적용하는 방법이다. 너무나 간단한게 장점이고 단점으로는 직접 파일을 적용하는 방법보다 로드 속도가 느리다. 적용 방법은 직접 cdn 링크를 html에 삽입하고, css에서 font-family로 적용하거나, css import를 통해 적용하는 방법이 있다.
1/* cdn import */ 2@import url(&amp;#39;https://fonts.googleapis.com/css2?family=Dongle:wght@300&amp;amp;display=swap&amp;#39;); 3 4/* 폰트 적용 */ 5body { 6 font-family: &amp;#39;Dongle&amp;#39;, sans-serif; 7} 폰트파일 직접 적용 직접 폰트 파일을 서비스 디렉토리에 넣어주고 @font-face로 불러오는 방법이 있다.</description>
    </item>
    
    <item>
      <title>[Vue] Vue 코드 포맷팅</title>
      <link>https://jinyisland.kr/post/prettier/</link>
      <pubDate>Mon, 20 Dec 2021 23:49:00 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/prettier/</guid>
      <description>Code Convention 프로젝트 진행 시 기능 구현도 중요하지만, 추후 유지보수를 위한 convention도 굉장히 중요하다고 생각한다. 특히 협업으로 작업하는 경우 거의 필수로 작용하는데, 개발자 마다 선호하는 코딩 스타일도 다르고 하물며 변수 명 하나하나 지을 때도 케밥케이스, 카멜케이스 등 여러 방식도 존재하기 때문이다. 물론 개인 프로젝트에서도 이 부분은 꽤나 중요한데 전체적인 일관성이 유지되어야 보는 사람들도 코드를 읽기 편하다. 컨벤션을 잘 지킬 수 있는 플러그인 중 대다수가 사용하는 eslint와 prettier를 vue와 연동해보는 것을 정리해보았다.</description>
    </item>
    
    <item>
      <title>[Vue] Vue에 Tailwind CSS 적용하기</title>
      <link>https://jinyisland.kr/post/vue-tailwind/</link>
      <pubDate>Thu, 21 Oct 2021 23:05:04 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vue-tailwind/</guid>
      <description>tailwind? tailwind는 CSS 프레임워크이다. 사용방법은 공식 문서를 보면 잘 나와있다. 기본적으로 태그 내에 inline형태로 클래스 형태로 스타일을 입히는 방식이다. 기존 css로 작업했을 때와 tailwind를 사용했을 때를 비교해 보자면 다음과 같다.
  브라우징 최적화
autoprefixer를 내장해서 사용하고 있기 때문에, 브라우저별로 상이한 스타일 문제로 골머리를 앓지 않아도 된다.
  클래스 기반 스타일 tailwind 기본 사용법은 태그 내에 클래스로 스타일을 입히는 방식이다. 예를 들어 특정 태그에 배경색을 입히려면 아래와 같이 작성한다. 클래스 명도 이해하기 쉽도록 구성되어 있기 때문에 대충 이름만 봐도 어떠한 역할인지는 파악이 된다.</description>
    </item>
    
    <item>
      <title>[Vue] computed와 Watch</title>
      <link>https://jinyisland.kr/post/computed-watch/</link>
      <pubDate>Sat, 09 Oct 2021 23:17:34 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/computed-watch/</guid>
      <description>vue에서 data 속성에 있는 값을 사용하고자 할 때, 값이 변화할 때 마다 자동적으로 리렌더링 해주는 인스턴스 속성이 2개가 있다. 바로 computed와 watch, 이 두 속성의 공통점은 값을 감지하다가 변경되면 메서드를 호출함으로써 값을 바로 반환해준다. 이 비슷한 두 속성에 대해 차이점에 대해서 알아보았다.
computed 사용법은 아래 코드를 참고, computed속성 내에 메서드를 정의하고 템플릿내에 호출을 하면 해당 값이 바뀔 때 마다 재호출을 해준다. 이는 캐싱이되는 성질이 있어 해당 값이 바뀌지 않는다면 호출을 절대 하지 않는다.</description>
    </item>
    
    <item>
      <title>[Vue] 라우터 개념 및 사용방법</title>
      <link>https://jinyisland.kr/post/vue-router/</link>
      <pubDate>Mon, 23 Aug 2021 22:54:41 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vue-router/</guid>
      <description>라우터 클라이언트의 요청 경로에 따라 해당하는 컴포넌트를 불러와 페이지를 구성할 수 있다.
URL 변경 시 DOM을 새로 갱신하는 것이 아니라 미리 컴포넌트를 가지고 있다가 변경된 요소영역만 갱신한다.(SPA 언어의 큰 특징)
따라서 유연하게 페이지 젼환이 가능하다. vue 프레임워크에서는 vue-router라는 라우팅 라이브러리를 지원한다.
설치하기 vue-router를 설치하고, package.json파일에서 모듈이 잘 추가되었는지 확인하자
1npm install vue-router --save 라우터 속성 다음은 라우터 인스턴스를 생성할 때 설정하는 값이다.
 String mode : 기본 값은 Hash 모드 (history 모드를 사용하면 브라우저 히스토리 스택에 기록된다.</description>
    </item>
    
    <item>
      <title>[Vue] 외부 Vue 프로젝트 불러오기</title>
      <link>https://jinyisland.kr/post/vue-import/</link>
      <pubDate>Sun, 18 Jul 2021 23:09:02 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vue-import/</guid>
      <description>윈도우에서 작업한 Vue 프로젝트를 mac 환경에서 확인하려던 중 git clone 후 프로젝트를 실행해보니 아래와 같은 에러가 나왔다.
1&amp;gt; vue-todo@0.1.0 serve /Users/sjchoi/Mydoc/02_Code/05_vue/vue-practice/vue-todo 2&amp;gt; vue-cli-service serve 3 4sh: vue-cli-service: command not found 5npm ERR! code ELIFECYCLE 6npm ERR! syscall spawn 7npm ERR! file sh 8npm ERR! errno ENOENT 9npm ERR! vue-todo@0.1.0 serve: `vue-cli-service serve` 10npm ERR! spawn ENOENT 11npm ERR! 12npm ERR! Failed at the vue-todo@0.1.0 serve script. 13npm ERR! This is probably not a problem with npm.</description>
    </item>
    
    <item>
      <title>[Vue] 컴포넌트에 대한 개념</title>
      <link>https://jinyisland.kr/post/vue-component/</link>
      <pubDate>Thu, 01 Jul 2021 21:27:40 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vue-component/</guid>
      <description>컴포넌트 개념 화면의 영역을 분리하여 개발하는 것, Vue에서 최상위 컴포넌트는 root이다.
컴포넌트 구성의 장점은 요소들을 재사용함으로써 개발 생산성이 향상되고, 컴포넌트들은 서로 관계가 형성된다.
전역 컴포넌트 주로 플러그인, 라이브러리 등 앱 전역에서 사용 할 공통 컴포넌트를 작성한다.
전역 컴포넌트를 생성하면 새 인스턴스를 생성할 때 마다 기본적으로 생성한다.
1//컴포넌트 생성 2Vue.component(&amp;#39;app-header&amp;#39;, { 3 template: &amp;#39;&amp;lt;h1&amp;gt;header&amp;lt;/h1&amp;gt;&amp;#39; //component Template 4}); 5 6Vue.component(&amp;#39;app-content&amp;#39;, { 7 template: &amp;#39;&amp;lt;p&amp;gt;This is Vue-Component Write&amp;lt;/p&amp;gt;&amp;#39; 8}); 9 10//인스턴스 생성 11new Vue({ 12 el: &amp;#39;#app&amp;#39; //selector 13}); 지역 컴포넌트 Vue 인스턴스 내에 직접 삽입하는 방식이다.</description>
    </item>
    
    <item>
      <title>[Vue] Vue 설치하기 및 프로젝트 구조</title>
      <link>https://jinyisland.kr/post/vue-start/</link>
      <pubDate>Wed, 30 Jun 2021 20:20:49 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vue-start/</guid>
      <description>CLI? cli란 Command Line Interface, 즉 명령어 기반의 인터페이스 환경을 의미한다.
vue 프로젝트 도입시 전체적인 웹애플레이케이션을 관리하려면 지금 소개하는 cli패키지를 설치하면 되고,
별도의 페이지에서 국한적으로 사용하려면 cdn방식으로도 사용할 수 있다.
CDN 방식을 사용하려면 아래 소스를 참고하면 된다.
1&amp;lt;head&amp;gt; 2 &amp;lt;!-- Vue-CDN --&amp;gt; 3 &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 4&amp;lt;/head&amp;gt; 5&amp;lt;body&amp;gt; 6 &amp;lt;!-- template --&amp;gt; 7 &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; 8 &amp;lt;app-footer&amp;gt;&amp;lt;/app-footer&amp;gt; 9 &amp;lt;/div&amp;gt; 10&amp;lt;/body&amp;gt; 11&amp;lt;script&amp;gt; 12 //vue 인스턴스 생성 13 new Vue({ 14 el: &amp;#39;#app&amp;#39;, 15 components: { 16 &amp;#39;app-footer&amp;#39;: { 17 template: &amp;#39;&amp;lt;footer&amp;gt;Footer!</description>
    </item>
    
  </channel>
</rss>

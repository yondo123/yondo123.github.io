<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>library on Jiny</title>
    <link>https://jinyisland.kr/tags/library/</link>
    <description>Recent content in library on Jiny</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Jun 2022 23:23:52 +0900</lastBuildDate><atom:link href="https://jinyisland.kr/tags/library/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[React] 리액트 라우터 기본 사용방법</title>
      <link>https://jinyisland.kr/post/react-router/</link>
      <pubDate>Wed, 22 Jun 2022 23:23:52 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/react-router/</guid>
      <description>페이지 라우팅 vue를 처음 접했을 때 이해했던 개념이지만, 한번 더 정리하자면 일단 라우터라는 개념은 네트워크 상에서 통신 데이터를 보낼 경로를 선택하는 과정을 의미한다. SPA 환경의 웹 애플리케이션(Vue, React, Angular)에서는 말 그대로 요청(Request)에 따라 알맞은 페이지를 반환해주는 과정 자체로 이해하면 된다.
SPA의 단일 페이지라는 이점을 살려, MPA(Multi Page Application) 환경과는 달리 페이지자체를 반환하지 않고 데이터만 불러와 렌더링해주기 때문에 사용자 입장에서 훨씬 빠르다고 느낄 수 있다. 또한 클라이언트에서 렌더링을 다루기때문에 CSR(Client Side Rendering)이라고도 불린다.</description>
    </item>
    
    <item>
      <title>Vue 코드 포맷팅</title>
      <link>https://jinyisland.kr/post/prettier/</link>
      <pubDate>Mon, 20 Dec 2021 23:49:00 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/prettier/</guid>
      <description>Code Convention 프로젝트 진행 시 기능 구현도 중요하지만, 추후 유지보수를 위한 convention도 굉장히 중요하다고 생각한다. 특히 협업으로 작업하는 경우 거의 필수로 작용하는데, 개발자 마다 선호하는 코딩 스타일도 다르고 하물며 변수 명 하나하나 지을 때도 케밥케이스, 카멜케이스 등 여러 방식도 존재하기 때문이다. 물론 개인 프로젝트에서도 이 부분은 꽤나 중요한데 전체적인 일관성이 유지되어야 보는 사람들도 코드를 읽기 편하다. 컨벤션을 잘 지킬 수 있는 플러그인 중 대다수가 사용하는 eslint와 prettier를 vue와 연동해보는 것을 정리해보았다.</description>
    </item>
    
    <item>
      <title>Vuex 개념과 실제 사용해보기!</title>
      <link>https://jinyisland.kr/post/vuex/</link>
      <pubDate>Fri, 03 Dec 2021 16:10:08 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vuex/</guid>
      <description>Vuex vuex는 vue.js에서 컴포넌트들의 상태 관리를 위한 효율적인 라이브러리이다.
React의 Flux 이름과 비슷한것을 보면 Flux 패턴에서 차용한 것이라고 한다.
Vuex를 사용하면 좋은 점 기본적으로 vue 생태계에서 컴포넌트 간 여러 정보들을 관리하려면 부모-자식 관계로 데이터들을 넘겨주고 받아야한다. 하지만 현실적으로 복잡한 컴포넌트 관계속에서 계속 주고 받으려면 여러 컴포넌트 파일에서 data 속성을 관리해주어야 하는 단점이 있다. 예를 들어 위 사진처럼 깊은 관계에서 다른 컴포넌트로 데이터를 보내려면 부모 컴포넌트를 계속 찾아 이벤트를 바인딩 시키고 다시 props로 내려주어야 하는 불편함이 있다.</description>
    </item>
    
    <item>
      <title>Vue에 Tailwind CSS 적용하기</title>
      <link>https://jinyisland.kr/post/vue-tailwind/</link>
      <pubDate>Thu, 21 Oct 2021 23:05:04 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vue-tailwind/</guid>
      <description>tailwind? tailwind는 CSS 프레임워크이다. 사용방법은 공식 문서를 보면 잘 나와있다. 기본적으로 태그 내에 inline형태로 클래스 형태로 스타일을 입히는 방식이다. 기존 css로 작업했을 때와 tailwind를 사용했을 때를 비교해 보자면 다음과 같다.
  브라우징 최적화
autoprefixer를 내장해서 사용하고 있기 때문에, 브라우저별로 상이한 스타일 문제로 골머리를 앓지 않아도 된다.
  클래스 기반 스타일 tailwind 기본 사용법은 태그 내에 클래스로 스타일을 입히는 방식이다. 예를 들어 특정 태그에 배경색을 입히려면 아래와 같이 작성한다. 클래스 명도 이해하기 쉽도록 구성되어 있기 때문에 대충 이름만 봐도 어떠한 역할인지는 파악이 된다.</description>
    </item>
    
    <item>
      <title>Vue 라우터 개념 및 사용방법</title>
      <link>https://jinyisland.kr/post/vue-router/</link>
      <pubDate>Mon, 23 Aug 2021 22:54:41 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vue-router/</guid>
      <description>라우터 클라이언트의 요청 경로에 따라 해당하는 컴포넌트를 불러와 페이지를 구성할 수 있다.
URL 변경 시 DOM을 새로 갱신하는 것이 아니라 미리 컴포넌트를 가지고 있다가 변경된 요소영역만 갱신한다.(SPA 언어의 큰 특징)
따라서 유연하게 페이지 젼환이 가능하다. vue 프레임워크에서는 vue-router라는 라우팅 라이브러리를 지원한다.
설치하기 vue-router를 설치하고, package.json파일에서 모듈이 잘 추가되었는지 확인하자
1npm install vue-router --save 라우터 속성 다음은 라우터 인스턴스를 생성할 때 설정하는 값이다.
 String mode : 기본 값은 Hash 모드 (history 모드를 사용하면 브라우저 히스토리 스택에 기록된다.</description>
    </item>
    
  </channel>
</rss>

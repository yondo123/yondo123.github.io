<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>library on Jiny</title>
    <link>https://jinyisland.kr/tags/library/</link>
    <description>Recent content in library on Jiny</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Oct 2021 23:05:04 +0900</lastBuildDate><atom:link href="https://jinyisland.kr/tags/library/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue에 Tailwind CSS 적용하기</title>
      <link>https://jinyisland.kr/post/vue-tailwind/</link>
      <pubDate>Thu, 21 Oct 2021 23:05:04 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vue-tailwind/</guid>
      <description>tailwind? tailwind는 CSS 프레임워크이다. 사용방법은 공식 문서를 보면 잘 나와있다. 기본적으로 태그 내에 inline형태로 클래스 형태로 스타일을 입히는 방식이다. 기존 css로 작업했을 때와 tailwind를 사용했을 때를 비교해 보자면 다음과 같다.
  브라우징 최적화
autoprefixer를 내장해서 사용하고 있기 때문에, 브라우저별로 상이한 스타일 문제로 골머리를 앓지 않아도 된다.
  클래스 기반 스타일 tailwind 기본 사용법은 태그 내에 클래스로 스타일을 입히는 방식이다. 예를 들어 특정 태그에 배경색을 입히려면 아래와 같이 작성한다. 클래스 명도 이해하기 쉽도록 구성되어 있기 때문에 대충 이름만 봐도 어떠한 역할인지는 파악이 된다.</description>
    </item>
    
    <item>
      <title>Vue 라우터 개념 및 사용방법</title>
      <link>https://jinyisland.kr/post/vue-router/</link>
      <pubDate>Mon, 23 Aug 2021 22:54:41 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/vue-router/</guid>
      <description>라우터 클라이언트의 요청 경로에 따라 해당하는 컴포넌트를 불러와 페이지를 구성할 수 있다.
URL 변경 시 DOM을 새로 갱신하는 것이 아니라 미리 컴포넌트를 가지고 있다가 변경된 요소영역만 갱신한다.(SPA 언어의 큰 특징)
따라서 유연하게 페이지 젼환이 가능하다. vue 프레임워크에서는 vue-router라는 라우팅 라이브러리를 지원한다.
설치하기 vue-router를 설치하고, package.json파일에서 모듈이 잘 추가되었는지 확인하자
1npm install vue-router --save 라우터 속성 다음은 라우터 인스턴스를 생성할 때 설정하는 값이다.
 String mode : 기본 값은 Hash 모드 (history 모드를 사용하면 브라우저 히스토리 스택에 기록된다.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>node on Jiny</title>
    <link>https://jinyisland.kr/tags/node/</link>
    <description>Recent content in node on Jiny</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Jan 2022 23:19:14 +0900</lastBuildDate><atom:link href="https://jinyisland.kr/tags/node/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node.js 자주 사용하는 모듈 정리</title>
      <link>https://jinyisland.kr/post/useful-modules/</link>
      <pubDate>Mon, 10 Jan 2022 23:19:14 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/useful-modules/</guid>
      <description>global 브라우저의 window와 같은 전역 객체 역할, 하지만 브라우저와 관련된 객체(document 등)들은 사용하지 못한다. global객체 역시 생략해서 사용 가능하다. 그리고 브라우저의 window객체와 마찬가지로 global에 값을 주입하면 프로젝트 내 모든 파일에서 전역 변수로 사용할 수 있다 . (하지만 이러한 패턴은 지양한다, module을 통해 관리하자)
1global.console.log(&amp;#34;hello Node!&amp;#34;); 2console.log(&amp;#34;hello Node!&amp;#34;); console 로그를 출력하는 객체, 흔히 사용하는 log, error 말고 신기한 것을 소개한다.
console.time 수행 시점에 time을 찍어 해당 코드를 수행한 시간을 알아낼 수 있다.</description>
    </item>
    
    <item>
      <title>npm에 대한 개념과 사용 방법</title>
      <link>https://jinyisland.kr/post/npm/</link>
      <pubDate>Mon, 10 Jan 2022 22:40:47 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/npm/</guid>
      <description>npm NodeNode Package Manager, 말 그대로 Node.js 환경에서 여러 모듈들을 패키지화하여 관리하는 저장소 같은 역할이다.
패키지를 직접 만들어 배포할 수 있고 다른 사람이 배포한 여러 패키지 모듈들을 설치해 프로젝트에 적용시킬 수도 있다.
npm 생성하기 npm 환경에서 제일 중요한 것은 패키지 관리이다. 패키지들은 package.json파일에서 일괄적으로 관리하는데 직접 json 파일로 생성해도 되고, 명령어를 입력해 생성해도 된다. 터미널에서 npm init명령어를 입력하면 자동적으로 package.json파일을 생성할 수 있다.
1npm init 2# &amp;gt; packagename : 프로젝트 이름 입력 3# &amp;gt; version : 프로젝트 버전 입력 (default : 1.</description>
    </item>
    
    <item>
      <title>Http 쿠키의 개념과 활용 방법</title>
      <link>https://jinyisland.kr/post/cookies/</link>
      <pubDate>Mon, 20 Sep 2021 18:49:47 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/cookies/</guid>
      <description>Http http 트랜잭션에는 상태가 없다. 모든 사용자 요청에는 사이트 기능에 맞는 상태들을 유지하는데 (사용자 정보, 권한 등등..) 이런 무수히 많은 상태들을 관리하려면 사용자를 식별할 수 있는 방법이 필요하다. 그중에 하나가 쿠키이다. 물론 사용자를 가릴 수 있는 방법에 초창기 여러 가지 방법이 있었는데 사용자 IP를 활용한 방법 등이 있었다. IP를 활용한 방법에는 다음과 같은 문제점이 있다.
 사용자 기준이 아닌 접속 PC의 IP이기 때문에 정확한 사용자 구별이 어려움 ISP가 제공하는 IP 대역을 사용하는 경우, 대부분 매번 다른 주소를 받으므로 추후 식별이 어려움 NAT 장비 등, 보안을 위해 IP 주소를 private 하게 관리 → 서버에서 받는 사용자 IP가 실제 IP가 아닐 수 있음  위와 같은 문제점으로, IP를 활용한 방식보다 아예 사용자 마다의 인증 프로세스를 부여하여 명확한 식별 요청을 할 수 있는데 이 기능이 바로 우리가 흔히 접하는 로그인 기능</description>
    </item>
    
    <item>
      <title>Node.js HTTP모듈 실습</title>
      <link>https://jinyisland.kr/post/node-restapi/</link>
      <pubDate>Fri, 17 Sep 2021 23:48:56 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/node-restapi/</guid>
      <description>Node.js HTTP 모듈을 통해 간단히 요청보내고, 주고받는 초간단 API 서버를 만들어보았다.
Request createServer 콜백에서 request, response 인자를 받는데 request 객체에서 요청 정보들을 받을 수 있다.
1const http = require(&amp;#34;http&amp;#34;); 2 3http.createServer(async (request, response)=&amp;gt;{ 4	try{ 5	const method = request.method; 6	const url = request.url; 7	//step 1. 요청 메소드 구분 8	if(method == &amp;#34;GET&amp;#34;){ 9	//step 2. URL 구분 10	if(url == &amp;#34;/&amp;#34;){ 11	}else if(url == &amp;#34;/list&amp;#34;){ 12	} 13	}else if(method == &amp;#34;POST&amp;#34;){ 14	//code.</description>
    </item>
    
    <item>
      <title>자바스크립트 모듈화</title>
      <link>https://jinyisland.kr/post/js-module/</link>
      <pubDate>Sat, 11 Sep 2021 23:36:33 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/js-module/</guid>
      <description>Module module객체를 통해 각각의 기능이나 js파일들을 쉽게 모듈화가 가능하다.
export 코드를 외부에 내보내고 싶다면 export문을 사용한다. 함수, 변수, 클래스 등을 내보낼 수 있다.
1//📁module/util.js 2const constants = { 3	message : &amp;#39;simple message&amp;#39;; 4} 5 6const requestUrl = &amp;#39;/xyz-url&amp;#39;; 7 8const private = { 9	privateKey : &amp;#39;1234&amp;#39; 10} 11 12export {constants, requestUrl}; //배열로도 export가 가능하다. (1~2개 모듈은 보통 객체형식으로 많이 사용) 각각의 모듈 대상에 export 예약어를 붙여 내보낼 수도 있다.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Style on Jiny</title>
    <link>https://jinyisland.kr/categories/style/</link>
    <description>Recent content in Style on Jiny</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Sep 2022 23:45:32 +0900</lastBuildDate><atom:link href="https://jinyisland.kr/categories/style/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Sass] Mixin 사용해보기</title>
      <link>https://jinyisland.kr/post/sass-mixin/</link>
      <pubDate>Fri, 30 Sep 2022 23:45:32 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/sass-mixin/</guid>
      <description>Mixin CSS내에서 반복적으로 사용하는 코드들을 재사용할 수 있도록 import 해주는 문법이다.
사용법 @mixin 키워드 뒤에 사용 할 mixin 이름을 지정해준다. 사용하려는 부분에 @include로 선언한 mixin을 호출할 수 있다.
(함수 사용방법과 상당히 유사하다.)
//mixin 정의 @mixin text-red() { color: red; } //mixin 호출 p { @include text-red(); } css 컴파일 결과 👀
p { color: red; } 파라미터 선언한 mixin에 내부에 사용 할 파라미터도 전달할 수 있다. 또한 파라미터를 사용하지 않을 경우, 호출 시에 괄호를 생략할 수 있다.</description>
    </item>
    
    <item>
      <title>[Sass] Sass 설치 및 기본 문법 소개</title>
      <link>https://jinyisland.kr/post/what-sass/</link>
      <pubDate>Sun, 25 Sep 2022 16:39:39 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/what-sass/</guid>
      <description>Sass를 사용해야 할 이유 CSS만 주구장창 사용하다가 한달동안 Sass를 스터디하였는데 직접 사용해보니 왜 Sass를 사용하면 좋은지 정리를 해보았다.
1. 규모가 크고 복잡한 웹 어플리케이션에서의 효율적인 구조화
Sass에서 제공하는 여러 내장 함수 및 믹스인, 함수를 사용해 공통 스타일 작성에 더욱 효율적이다.
2. 프로그래밍 언어 처럼 변수, 조건문, 반복문 활용을 통해 중복되지 않은 공통 컴포넌트 작성
CSS에서도 중복되는 값들은 root요소에 변수를 선언해서 사용하였지만, Sass 환경에서는 코드 블록 범위 내에서 자유로운 변수 선언이 가능하며 조건문, 반복문을 지원해 반복적인 코드 사용이 줄어들고 논리적으로 스타일 구조를 작성할 수 있다.</description>
    </item>
    
    <item>
      <title>HTML에 폰트 적용하는 방법</title>
      <link>https://jinyisland.kr/post/font/</link>
      <pubDate>Mon, 17 Jan 2022 23:18:33 +0900</pubDate>
      
      <guid>https://jinyisland.kr/post/font/</guid>
      <description>웹 폰트 웹 폰트를 적용하는 방법은 크게 2가지가 있다. 하나는 cdn을 이용하는 방법, 나머지 하나는 직접 폰트 파일을 경로에 미리 삽입하여 @font-face로 정의하는 방법이다.
CDN을 활용한 방법 구글 폰트 등과 같이 cdn을 제공해주는 사이트에서 폰트를 적용하는 방법이다. 너무나 간단한게 장점이고 단점으로는 직접 파일을 적용하는 방법보다 로드 속도가 느리다. 적용 방법은 직접 cdn 링크를 html에 삽입하고, css에서 font-family로 적용하거나, css import를 통해 적용하는 방법이 있다.
/* cdn import */ @import url(&amp;#39;https://fonts.googleapis.com/css2?family=Dongle:wght@300&amp;amp;display=swap&amp;#39;); /* 폰트 적용 */ body { font-family: &amp;#39;Dongle&amp;#39;, sans-serif; } 폰트파일 직접 적용 직접 폰트 파일을 서비스 디렉토리에 넣어주고 @font-face로 불러오는 방법이 있다.</description>
    </item>
    
  </channel>
</rss>
